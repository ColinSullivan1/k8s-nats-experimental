# Default values for nats-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 3
image:
  repository: nats
  tag: latest
  pullPolicy: IfNotPresent

# User required for connections
username: ""

# Password required for connections
password: ""

# Debug output.  Will negatively impact performance.
debug: false

# Trace output.  Will severely impact performance.
trace: false

service:
  name: nats-service
  type: ClusterIP

  # Port clients connect on.
  clientPort: 4222

  # Port for the monitoring REST API
  monitorPort: 8222

  # Port for clustering connections
  clusterPort: 6222

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

#
# The default image configuration can be overridden here, 
# to override default values.
overrideImageConfig: false

#
# Configuration used when the default image is overridden.  It is highly suggested
# to avoid to setting ports, interfaces, or routes here.
#
configurationFiles:
  gnatsd.conf: |- 

    ##  For a full reference, 
    ##  See:  https://nats.io/documentation/server/gnatsd-config
    ##

    ##
    ## You can include configuration files on other PVCs, for example shared.
    ## authorization files.

    # include "/mypvc/users.conf"
    
    ### override limits
    # max_payload = 10240k 
    # max_connections = 10
    # write_deadline = 5s

    # set your authorization scheme for connections and routes here.
    authorization {
      # override the default authorization timeout, setup lists of users, etc.
      timeout: 3
    }

    # This is for clustering multiple servers together.
    cluster {

      # Routes are protected, so need to use them with --routes flag
      # e.g. --routes=nats-route://ruser:T0pS3cr3t@otherdockerhost:6222
      authorization {
        # user: ruser
        # password: T0pS3cr3t
        timeout: 3.0
      }

      # reference route certificates as secrets.
      # tls {
      #   cert_file:  "/secretsvolume/server.pem"
      #   key_file:   "/secretsvolume/key.pem"
      #   timeout:    2
      # }
    }



