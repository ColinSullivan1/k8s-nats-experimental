# Default values for nats-streaming-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# NATS Streaming begins 2 instances, one warm FT backup and one 
# active.  Regardless of the # of replicas, there will only be one
# active.  This will change when clustering is enabled (Future Item)
replicaCount: 2
image:
  repository: nats-streaming
  tag: 0.6.0
  pullPolicy: IfNotPresent

#
# Streaming server configuration
#

# Cluster ID (default: test-cluster)
clusterID: "test-cluster"
  
# Connect to this external NATS Server URL
natsUrl: "nats://username:password@nats-service:4222"

# Name of the FT Group. A group can be 2 or more servers with a single active server and all sharing the same datastore.
ftGroup: "ft-{{ .Values.streaming.clusterID }}"
  
# Max number of channels (0 for unlimited)
maxChannels: 100
  
# Max number of subscriptions per channel (0 for unlimited)
maxSubs: 1000

# Max number of messages per channel (0 for unlimited)
maxMsgs: "1000000"

# Max messages total size per channel (0 for unlimited)
maxBytes:  "900mb"

# Max duration a message can be stored ("0s" for unlimited)
maxAge: 0

# Configuration file (requires pvc)
configFile: ""

#
# ADVANCED CONFIGURATION:  Change these with caution.
#

# Interval at which server sends heartbeat to a client
hbInterval: 30s

# How long server waits for a heartbeat response
hbTimeout: 10s

# Number of failed heartbeats before server closes the client connection
hbFailCount: 330

# Use for general debugging.  Enabling this will negatively affect performance.
debug: false
# Do not normally set this as it will drastically decrease performance and generate
# volumous logs.
trace: false

#
# The streaming service is for monitoring and liveness probes
#
service:
  name: nats-streaming-monitoring
  type: ClusterIP
  monitorPort: 8222

persistence:
  enabled: true
  ## Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 1Gi
  ## Selection Criteria
  ## Used to select a volume claim by labels
  #selector:
  #  matchLabels:
  #    name: "nats-pv"
  #  matchExpressions:
  #    - {key: environment, operator: In, values: [dev]}
  
  ## 
  ## NATS streaming file configuration
  ##
  file:

    #  Enable compaction
    compactEnabled: true

    # Enable file CRC-32 checksum
    crc: true

    # Enable File.Sync on Flush
    sync: true

    # Store will try to use no more file descriptors than this given limit
    fdsLimit: 0

    ##
    ## ADVANCED CONFIGURATION:  Change these with caution.
    ## 
    # File buffer size (in bytes)
    bufferSize: "2097152"
    # File fragmentation % threshold for compaction
    compactFrag: 50
    # Minimum interval (in seconds) between file compactions, 5min
    compactInterval: 300
    #  Minimum file size for compaction
    compactMinSize: "1048576"
    # Polynomial used to make the table used for CRC-32 checksum (default is crc32.IEEE)
    crcPoly : "3988292384"
    # Maximum number of messages per file slice (subject to channel limits)
    sliceMaxMsgs: 0
    # Maximum file slice size - including index file (subject to channel limits)  64MB
    sliceMaxBytes: "67108931"
    # Maximum file slice duration starting when the first message is stored (subject to channel limits)
    sliceMaxAge: 0
    # Path to script to use if you want to archive a file slice being removed
    sliceArchiveScript: ""
    #  On startup, number of channels that can be recovered in parallel
    parallelRecovery: 1
 
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

#
# The default image configuration can be overridden here, 
# to override default values.
overrideImageConfig: false

#
# Configuration used when the default image is overridden.  It is highly suggested
# to avoid to setting ports, interfaces, or routes here.
#
configurationFiles:
  nss.conf: |- 

    ##  For a full reference, 
    ##  See: 
    
    streaming: {
      id: "me"
      discover_prefix: "discover"
      store: "file"
      dir: "/path/to/datastore"
      sd: true
      sv: true
      ns: "nats://localhost:4222"
      secure: true
      hb_interval: "10s"
      hb_timeout: "1s"
      hb_fail_count: 2
      ft_group: "ft"
      partitioning: true

      store_limits: {
        max_channels: 11
        max_msgs: 12
        max_bytes: 13
        max_age: "14s"
        max_subs: 15

        channels: {
          "foo": {
            max_msgs: 1
            max_bytes: 2
            max_age: "3s"
            max_subs: 4
          }
          "bar": {
            max_msgs: 5
            max_bytes: 6
            max_age: "7s"
            max_subs: 8
          }
        }
      }

      tls: {
        client_cert: "/path/to/client/cert_file"
        client_key: "/path/to/client/key_file"
        client_ca: "/path/to/client/ca_file"
      }

      file: {
        compact: true
        compact_frag: 1
        compact_interval: 2
        compact_min_size: 3
        buffer_size: 4
        crc: true
        crc_poly: 5
        sync: true
        cache: false
        slice_max_msgs: 6
        slice_max_bytes: 7
        slice_max_age: "8s"
        slice_archive_script: "myArchiveScript"
        fds_limit: 8
        parallel_recovery: 9
      }

      sql: {
        driver: "mysql"
        source: "ivan:pwd@/nss_db"
        no_caching: true
        max_open_conns: 5
      }
    }
    